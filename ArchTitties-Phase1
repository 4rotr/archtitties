
# ArchTitties - making ArchLinux installation better than you could imagine
# _______  ______ _______ _     _ _______ _____ _______ _______ _____ _______ _______
# |_____| |_____/ |       |_____|    |      |      |       |      |   |______ |______
# |     | |    \_ |_____  |     |    |    __|__    |       |    __|__ |______ ______|
#
# Proudly developed by acidfall/4rotr.

# Setting some colours
black='\033[0;30m'
red='\033[0;31m'
green='\033[0;32m'
blue='\033[0;34m'
lblue='\033[1;34m'
lred='\033[1;31m'
white='\033[1;37m'

clear
echo -e "$white ArchTitties by acidfall/4rotr -- github.com/4rotr"
echo -e "$white ArchTitties uses the Tamsyn font, installing that now."
pacman -Syy > /dev/null
pacman -S --needed --noconfirm tamsyn-font > /dev/null
setfont Tamsyn10x20r
echo -e "$white Getting prerequisites..."
pacman -S --needed --noconfirm grub > /dev/null

clear
echo -e "$lblue _______  ______ _______ _     _ _______ _____ _______ _______ _____ _______ _______"
echo -e "$lblue |_____| |_____/ |       |_____|    |      |      |       |      |   |______ |______"
echo -e "$lblue |     | |    \_ |_____  |     |    |    __|__    |       |    __|__ |______ ______|"
echo
echo -e "$lblue -[ Phase 1 ]-----------------------------------------------------------------------"
echo
echo -e "$green Would you like to set up mirrors closer to your country? Might improve speed. (y/n)"
read mirrors

case $mirrors in

y|Y|yes|YES)
	loc=$(curl -4 ifconfig.co/country-iso)
	clear
	echo -e "$lblue _______  ______ _______ _     _ _______ _____ _______ _______ _____ _______ _______"
	echo -e "$lblue |_____| |_____/ |       |_____|    |      |      |       |      |   |______ |______"
	echo -e "$lblue |     | |    \_ |_____  |     |    |    __|__    |       |    __|__ |______ ______|"
	echo
	echo -e "$lblue -[ Phase 1 ]------------------------------------------------------[ Mirror Setup ]-"
	echo
	echo -n -e "$green Got country code of: "
	echo -e "$lblue $loc"
	echo
	echo -e "$lblue -----------------------------------------------------------------------------------"
	echo
	echo -e "$white"
	pacman -Syy > /dev/null
	pacman -S --needed --noconfirm reflector
	cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
	echo -e "$green Copied your Pacman mirrorlist to /etc/pacman.d/mirrorlist.bak."
	echo -e "$lblue Now running Reflector..."
	reflector -c $loc -f 12 -l 10 -n 12 --save /etc/pacman.d/mirrorlist
	echo -e "$lblue Mirrorlist now completed."

esac

clear
echo -e "$lblue _______  ______ _______ _     _ _______ _____ _______ _______ _____ _______ _______"
echo -e "$lblue |_____| |_____/ |       |_____|    |      |      |       |      |   |______ |______"
echo -e "$lblue |     | |    \_ |_____  |     |    |    __|__    |       |    __|__ |______ ______|"
echo
echo -e "$lblue -[ Phase 1 ]--------------------------------------------------------[ Disk Setup ]-"
echo
echo -e "$red BIOS/CSM support is planned for later. Check github.com/4rotr/archtitties for updates"
echo -e "$green Which disk would you like to use? (i.e. /dev/sdX $red OR $green /dev/nvmeX $red OR $green /dev/mmcblkX)"
read disk
echo -e "$red ALL DATA WILL BE WIPED FROM THIS DRIVE. Do you wish to continue? (y/n) "
read confirmation

case $confirmation in
y|Y|yes|YES)
	clear
	echo -e "$lblue _______  ______ _______ _     _ _______ _____ _______ _______ _____ _______ _______"
	echo -e "$lblue |_____| |_____/ |       |_____|    |      |      |       |      |   |______ |______"
	echo -e "$lblue |     | |    \_ |_____  |     |    |    __|__    |       |    __|__ |______ ______|"
	echo
	echo -e "$lblue -[ Phase 1 ]----------------------------------------------[ Disk Setup - Stage 2 ]-"
	echo
	echo -e "$green Chosen disk - $disk | Now preparing the automatic formatting process (using sgdisk)"
	echo -e "$white Formatting..."
	sgdisk -Z ${disk}
	sgdisk -a 2048 -o ${disk}
	sgdisk -n 1::+512M --typecode=1:ef00 ${disk}
	echo -e "EFI partition created"
	sgdisk -n 2::-0 --typecode=2:8300 ${disk}
	echo -e "Root partition created"
	echo -e "$lblue Creating file systems..."
	if [[ ${DISK} =~ "nvme" ]]; then
		mkfs.fat -F32 ${disk}p1
		mkfs.ext4 ${disk}p2
	elif [[ ${DISK} =~ "mmcblk" ]]; then
		mkfs.fat -F32 ${disk}p1
		mkfs.ext4 ${disk}p2
	else
		mkfs.fat -F32 ${disk}1
		mkfs.ext4 ${disk}2
	fi
	echo -e "$lblue Mounting root partition..."
	if [[ ${DISK} =~ "nvme" ]]; then
		mount ${disk}p2 /mnt
	elif [[ ${DISK} =~ "mmcblk" ]]; then
		mount ${disk}p2 /mnt
	else
		mount ${disk}2 /mnt
	fi
	;;
*)
	clear
	echo -e "$red ArchTitties install has cancelled - your system has (hopefully) not been changed. Rebooting in 5 seconds"
	sleep 5
	reboot now
esac

clear
echo -e "$lblue _______  ______ _______ _     _ _______ _____ _______ _______ _____ _______ _______"
echo -e "$lblue |_____| |_____/ |       |_____|    |      |      |       |      |   |______ |______"
echo -e "$lblue |     | |    \_ |_____  |     |    |    __|__    |       |    __|__ |______ ______|"
echo
echo -e "$lblue -[ Phase 1 ]------------------------------------------------[ Installation Setup ]-"
echo
echo -e "$green Good news! This part here is almost entirely automated. Just sit back and relax."
pacstrap /mnt base base-devel linux linux-firmware vim nano grub efibootmgr --noconfirm --needed
genfstab -U /mnt >> /mnt/etc/fstab
mkdir /mnt/boot/efi
if [[ ${DISK} =~ "nvme" ]]; then
	mount ${disk}p1 /mnt/boot/efi
elif [[ ${DISK} =~ "mmcblk" ]]; then
	mount ${disk}p1 /mnt/boot/efi
else
	mount ${disk}1 /mnt/boot/efi
fi
echo
echo -e "$white Phase 1 complete, starting phase 2 in 3 seconds."
sleep 3
